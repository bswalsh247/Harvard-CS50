1. What is pneumonoultramicroscopicsilicovolcanoconiosis?
    An invented long word said to mean a lung disease caused by inhaling very fine ash and sand dust.
    Remember that in the dictionaries provided there are no words longer than 45 characters.

2. According to its man page, what does getrusage do?
    getrusage() returns resource usage measures for who, which can be one of the following:
    RUSAGE_SELF
    Return  resource  usage  statistics  for  the  calling process, which is the sum of resources used by all
    threads in the process.

3. Per that same man page, how many members are in a variable of type struct rusage? 16
   struct timeval ru_utime; /* user CPU time used */
   struct timeval ru_stime; /* system CPU time used */
   long   ru_maxrss;        /* maximum resident set size */
   long   ru_ixrss;         /* integral shared memory size */
   long   ru_idrss;         /* integral unshared data size */
   long   ru_isrss;         /* integral unshared stack size */
   long   ru_minflt;        /* page reclaims (soft page faults) */
   long   ru_majflt;        /* page faults (hard page faults) */
   long   ru_nswap;         /* swaps */
   long   ru_inblock;       /* block input operations */
   long   ru_oublock;       /* block output operations */
   long   ru_msgsnd;        /* IPC messages sent */
   long   ru_msgrcv;        /* IPC messages received */
   long   ru_nsignals;      /* signals received */
   long   ru_nvcsw;         /* voluntary context switches */
   long   ru_nivcsw;        /* involuntary context switches */

4.  Why do you think we pass before and after by reference (instead of by value) to calculate, even
    though we’re not changing their contents?
        Using pointers instead of passing by value (aka copy) is quicker and more efficient.

5. Explain as precisely as possible, in a paragraph or more, how main goes about reading words
   from a file. In other words, convince us that you indeed understand how that function’s for loop works.
        The key aspect of the for loop is the c = fgetc(fp) function call. fgetc
        gets the next character (an unsigned char) from fp and advances the
        position indicator in fp until the end of the file (EOF) is reached. As
        each character is received, it is put through an if(if)-elseif-elseif
        logical sequence. Summarizing the sequence: 1) If the character is an
        alphabetical character or an apostrophe that is not at index 0 of the
        word, the character is appended to the word array. 2) Else if the
        character is numerical, the word is ignored and we skip ahead to the
        next word (which is found after a space). 3) Else if we hit a space or
        punctuation, we must have found a whole word so we terminate the word by
        adding \0 to the word array.

6.  Why do you think we used fgetc to read each word’s characters one at a time rather than
    use fscanf with a format string like "%s" to read whole words at a time? Put another way,
    what problems might arise by relying on fscanf alone?
        fscanf with a format string like "%s" will read subsequent characters
        until a whitespace is found (whitespace characters are considered to be
        blank, newline and tab). Because words within the txt files sometimes
        end with punctuation, fscanf will view them as being part of the word,
        which complicates the reading procedure. In addition, if a longer string
        than expected was read using fscanf (e.g. a jibberish string like asdfba
        asdkdfawemflkasciaoeufalkesfasldkfjaoiwefjaslkdmcalksdfiwoefalskdfamsdcl
        asdflkasdlkmceaasdfasdf..., which could be included in a text file from
        a malicious source that is trying to break our program), we could
        overwrite important data in memory or cause a segmentation fault.

7. Why do you think we declared the parameters for check and load as const (which means "constant")?
        With const char* parameter, we prevent changes to the string that
        parameter is pointing at through parameter (i.e. const pointers prevent
        changing the data pointed to)/ The parameters for check (const char* word)
        and load (const char* dictionary) are declared as const pointers because
        we want to prevent changes to a read word and the dictionary we are using.